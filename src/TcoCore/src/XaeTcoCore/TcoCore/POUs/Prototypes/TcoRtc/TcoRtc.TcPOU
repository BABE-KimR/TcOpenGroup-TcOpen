<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="TcoRtc" Id="{3a1d4056-fd57-08b3-0a60-7f95051a8a43}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TcoRtc IMPLEMENTS ITcoRtc
VAR	
    _synchNodeAmsId : STRING;
//	{attribute 'hide'}
//	timeStruct : Tc2_Utilities.TIMESTRUCT;
//	{attribute 'hide'}
	fileTime   : Tc2_Utilities.T_FILETIME;
//	{attribute 'hide'}
	fbGetSystemTime : Tc2_System.GETSYSTEMTIME;
//	{attribute 'hide'}
	sTime1 : STRING;
	sTime2 : STRING;
//	{attribute 'hide'}
	timeAsDT : DT;
	timeAsDATEANDTIME : DATE_AND_TIME;

	SysTime : Tc2_EtherCAT.T_DCTIME64;	
	
//	SynchTime : Tc2_Utilities.NT_SetTimeToRTCTime;
  
    LocalSysTime : Tc2_Utilities.FB_LocalSystemTime;

	_isValid : BOOL;	
	
	actDC : T_DCTIME64;
    sAct  : STRING;
	curDC : T_DCTIME64;
    sCur  : STRING;
	curDCT : T_DCTIME64;
    sCurt  : STRING;
	curE : T_DCTIME64;
    sCure  : STRING;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddLeadingZeroes" Id="{bc458d5b-d4c1-0051-3330-0332526105b7}">
      <Declaration><![CDATA[METHOD PRIVATE AddLeadingZeroes : STRING
VAR_INPUT
	Number : INT;
	Lenght : INT;
END_VAR

VAR
	index : INT;
	numberAsString : STRING;
	retVal : STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[numberAsString := INT_TO_STRING(Number);

FOR index := LEN(numberAsString) TO Lenght - 1 DO
	retVal := CONCAT(retVal, '0');
END_FOR

retVal := retVal := CONCAT(retVal, numberAsString);
AddLeadingZeroes := retVal;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AddLeadingZeroesToString" Id="{6bad58ae-6043-0a7d-1726-a6ffa4a8436b}">
      <Declaration><![CDATA[METHOD PRIVATE AddLeadingZeroesToString : STRING
VAR_INPUT
	Number : STRING;
	Lenght : INT;
END_VAR

VAR
	index : INT;
	numberAsString : STRING;
	retVal : STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR index := LEN(Number) TO Lenght - 1 DO
	retVal := CONCAT(retVal, '0');
END_FOR

retVal := retVal := CONCAT(retVal, Number);
AddLeadingZeroesToString := retVal;]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsValid" Id="{ea557ae0-2319-0a73-20c7-b1918880d293}">
      <Declaration><![CDATA[PROPERTY IsValid : BOOL]]></Declaration>
      <Get Name="Get" Id="{998b90ba-ddcd-029d-02e2-b332e4fa6b74}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsValid := _isValid;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Now" Id="{1ce19af5-bb24-0b92-3918-5d0f12ced654}">
      <Declaration><![CDATA[METHOD Now : DATE_AND_TIME
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Now := Tc2_Utilities.SYSTEMTIME_TO_DT(NowAsTIMESTRUCT());]]></ST>
      </Implementation>
    </Method>
    <Method Name="NowAsTIMESTRUCT" Id="{8e4f6aed-1632-058d-33a3-4703030bb725}">
      <Declaration><![CDATA[METHOD NowAsTIMESTRUCT : Tc2_Utilities.TIMESTRUCT
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[NowAsTIMESTRUCT := LocalSysTime.systemTime;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="NowHiPrecision" Id="{bce00263-3186-0c90-1b17-450bee8f7304}">
      <Declaration><![CDATA[METHOD NowHiPrecision : STRING
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbGetSystemTime(timeLoDW=>fileTime.dwLowDateTime, timeHiDW=>fileTime.dwHighDateTime );
sTime1 :=Tc2_Utilities.SYSTEMTIME_TO_STRING(Tc2_Utilities.FILETIME_TO_SYSTEMTIME( fileTime ));
timeAsDT := FILETIME_TO_DT( fileTime );

NowHiPrecision := sTime1;


SysTime := Tc2_System.F_GetSystemTime();


sTime2 := Tc2_EtherCAT.DCTIME64_TO_STRING(SysTime);

timeAsDT := ULINT_TO_DT(SysTime);

NowHiPrecision := sTime2;



actDC := F_GetActualDcTime64();
sAct  := DCTIME64_TO_STRING( actDC );

curDC := F_GetCurDcTaskTime64();
sCur  := DCTIME64_TO_STRING( curDC );

curDCT := F_GetCurDcTickTime64();
sCurt  := DCTIME64_TO_STRING( curDCT );

//curE := F_GetCurExtTime64();
//sCure  := DCTIME64_TO_STRING( curE );]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetSynchAmsId" Id="{7425e0ad-3fc8-0f83-1029-edcaca4fb896}">
      <Declaration><![CDATA[METHOD SetSynchAmsId
VAR_INPUT
	SynchNodeAmsId : STRING;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_synchNodeAmsId := SynchNodeAmsId;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Update" Id="{b45f0019-2d3e-0d67-3cbe-6bd10666673b}">
      <Declaration><![CDATA[METHOD INTERNAL Update : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[LocalSysTime(
	sNetID:= _synchNodeAmsId, 
	bEnable:= TRUE, 
	dwCycle:= 60, 
	dwOpt:= , 
	tTimeout:= , 
	bValid=> _isValid, 
	systemTime=> , 
	tzID=> );
	
Update := _isValid;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>