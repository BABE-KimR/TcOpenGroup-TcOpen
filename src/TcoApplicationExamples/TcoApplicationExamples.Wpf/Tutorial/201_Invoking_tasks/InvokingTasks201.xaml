<UserControl
    x:Class="PlcAppExamples.InvokingTasks201"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TcoApplicationExamples.Wpf"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vortex="http://vortex.mts/xaml"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{x:Static local:App.PlcAppExamples}"
    mc:Ignorable="d">

    <StackPanel Margin="10">
        <TextBlock>
            <Run FontWeight="Bold">Invoking Task</Run>
            <LineBreak />
            <Hyperlink local:HyperlinkExtensions.IsExternal="True" NavigateUri="https://github.com/Inxton/TcOpen.Documentation/blob/dev/articles/TcOpenFramework/application.md#tasks-tcotask--itcotask">Documentation</Hyperlink>
            <LineBreak />
            <Run>Task allows you to control chunks of logic in asynchronous execution.</Run>
            <LineBreak />
            <Run>In this example, we have a Component - Pneumatic Cylinder. This component is doing three things, therefore it has three tasks</Run>
            <LineBreak />
            <Run>One task for moving home, second for moving work and last for stopping the movement</Run>
            <LineBreak />
            <Run>Tasks also implement ICommand interface, ICommand is an interface between the Presentation and the Logic layer, so clicking a button will result in an action</Run>
            <LineBreak />
            <Run>Bellow the view for a cylinder, you can see a detailed view for each action. Once is done, it has to be restored, to run again.</Run>

        </TextBlock>
        <Separator Height="10" />
        <Grid>
            <vortex:RenderableContentControl DataContext="{Binding MAIN_PRG._TcOpenTutorial.InvokingTasks}" />
        </Grid>
    </StackPanel>
</UserControl>
