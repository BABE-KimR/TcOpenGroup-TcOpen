<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="TcoState_WaveformSequence" Id="{04ba7e24-6ed3-4ee9-92b0-ca0e37e6cfec}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TcoState_WaveformSequence EXTENDS TcoState
VAR
	_TcoTask_Transition_1	:	TcoTask_Transition(THIS^);
	_TcoTask_Transition_2	:	TcoTask_Transition(THIS^);
	_WaveformPointTable		:	ARRAY[0..10]	OF 	WaveformPoint;
	_WaveformPointsCount	:	UINT;
	_ActualTransitionNumber	:	UINT;
END_VAR
VAR_IN_OUT
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddWaveFormPoint" Id="{c24cbd60-28c3-40a9-9138-0ca3ffcff6cf}">
      <Declaration><![CDATA[METHOD AddWaveFormPoint
VAR_INPUT
	TransitionType	:	eTransitionType := eTransitionType.None;
	TargetValue		:	LREAL := 0;
	Duration		:	UINT := 0;
	Shape	 		:	LREAL := 0.0;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_WaveformPointTable[_WaveformPointsCount].TransitionType	:=	TransitionType;
_WaveformPointTable[_WaveformPointsCount].TargetValue 		:=	TargetValue;
_WaveformPointTable[_WaveformPointsCount].Duration 			:=	Duration;
_WaveformPointTable[_WaveformPointsCount].Shape	 			:=	Shape;

_WaveformPointsCount										:=	_WaveformPointsCount + 1;]]></ST>
      </Implementation>
    </Method>
    <Action Name="CheckIfFinished" Id="{0b4eba3d-6c3f-46e1-ac89-2b4af58b7ac1}">
      <Implementation>
        <ST><![CDATA[	IF _ActualTransitionNumber >= _WaveformPointsCount THEN
		THIS^.ChangeState(1110);
	ELSE
		THIS^.ChangeState(THIS^.State + 10);	
	END_IF]]></ST>
      </Implementation>
    </Action>
    <Method Name="ClearWaveFormTable" Id="{3336c4bb-9b93-4c3c-a681-b2baf1826fce}">
      <Declaration><![CDATA[METHOD ClearWaveFormTable
VAR
	i	:	INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i:= 0 TO 10 DO
	_WaveformPointTable[i].TransitionType	:=	eTransitionType.None;
	_WaveformPointTable[i].TargetValue 		:=	0;
	_WaveformPointTable[i].Duration 		:=	0;
	_WaveformPointTable[i].Shape	 		:=	0.0;
END_FOR

_WaveformPointsCount						:=	0;
_ActualTransitionNumber						:=	0;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="RunWithAutoRestore" Id="{2a3f354f-3d5c-439a-9016-8b31d3091a5e}">
      <Declaration><![CDATA[METHOD RunWithAutoRestore : BOOL
VAR_IN_OUT
	Value	:	LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//This  method use both _TcoTask_Transition_1 and  _TcoTask_Transition_2 tasks, one for odd, another for even transition points,  so after each Done rising edge, 
//no manual restore is neccessary if each task runs at least 2 PLC cycles
RunWithAutoRestore := FALSE;

//Init
IF THIS^.State = -1 THEN
	_ActualTransitionNumber := 0;
	THIS^.ChangeState(10).RestoreObject(_TcoTask_Transition_1).RestoreObject(_TcoTask_Transition_2);	
	_TcoTask_Transition_1(Value:=Value);	//Init reference after first download
	_TcoTask_Transition_2(Value:=Value);	//Init reference after first download
END_IF

// 0		*********
//Check if finished
IF THIS^.State = 	10 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State = 	20 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State = 	30 THEN
	WaitForTransitionEnd_1();
END_IF

// 1		*********
//Check if finished
IF THIS^.State =	110 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	120 THEN
	StartTransition_2();
END_IF

//Wait for transition end
IF THIS^.State =	130 THEN
	WaitForTransitionEnd_2();
END_IF

// 2		*********
//Check if finished
IF THIS^.State =	210 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	220 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	230 THEN
	WaitForTransitionEnd_1();
END_IF

// 3		*********
//Check if finished
IF THIS^.State =	310 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	320 THEN
	StartTransition_2();
END_IF

//Wait for transition end
IF THIS^.State =	330 THEN
	WaitForTransitionEnd_2();
END_IF

// 4		*********
//Check if finished
IF THIS^.State =	410 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	420 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	430 THEN
	WaitForTransitionEnd_1();
END_IF

// 5		*********
//Check if finished
IF THIS^.State =	510 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	520 THEN
	StartTransition_2();
END_IF

//Wait for transition end
IF THIS^.State =	530 THEN
	WaitForTransitionEnd_2();
END_IF

// 6		*********
//Check if finished
IF THIS^.State =	610 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	620 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	630 THEN
	WaitForTransitionEnd_1();
END_IF

// 7		*********
//Check if finished
IF THIS^.State =	710 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	720 THEN
	StartTransition_2();
END_IF

//Wait for transition end
IF THIS^.State =	730 THEN
	WaitForTransitionEnd_2();
END_IF

// 8		*********
//Check if finished
IF THIS^.State =	810 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	820 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	830 THEN
	WaitForTransitionEnd_1();
END_IF

// 9		*********
//Check if finished
IF THIS^.State =	910 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	920 THEN
	StartTransition_2();
END_IF

//Wait for transition end
IF THIS^.State =	930 THEN
	WaitForTransitionEnd_2();
END_IF

// 10	*********
//Check if finished
IF THIS^.State =	1010 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	1020 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	1030 THEN
	WaitForTransitionEnd_1();
END_IF

//Finished
IF THIS^.State = 1110 THEN
	RunWithAutoRestore := TRUE;
END_IF

_TcoTask_Transition_1(Value:=Value);
_TcoTask_Transition_2(Value:=Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="RunWithManualRestore" Id="{7f708e10-52e9-400b-8da9-63386052f425}">
      <Declaration><![CDATA[METHOD RunWithManualRestore : BOOL
VAR_IN_OUT
	Value	:	LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//This  method use only _TcoTask_Transition_1 task, so after each Done rising edge, needs to be restored manually in order to be used again in the next State in the same PLC cycle
RunWithManualRestore := FALSE;

//Init
IF THIS^.State = -1 THEN
	_ActualTransitionNumber := 0;
	THIS^.ChangeState(10).RestoreObject(_TcoTask_Transition_1).RestoreObject(_TcoTask_Transition_2);	
	_TcoTask_Transition_1(Value:=Value);	//Init rererence after first download
END_IF

// 0		*********
//Check if finished
IF THIS^.State = 	10 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State = 	20 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State = 	30 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

// 1		*********
//Check if finished
IF THIS^.State =	110 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	120 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	130 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

// 2		*********
//Check if finished
IF THIS^.State =	210 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	220 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	230 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

// 3		*********
//Check if finished
IF THIS^.State =	310 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	320 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	330 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

// 4		*********
//Check if finished
IF THIS^.State =	410 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	420 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	430 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

// 5		*********
//Check if finished
IF THIS^.State =	510 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	520 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	530 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

// 6		*********
//Check if finished
IF THIS^.State =	610 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	620 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	630 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

// 7		*********
//Check if finished
IF THIS^.State =	710 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	720 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	730 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

// 8		*********
//Check if finished
IF THIS^.State =	810 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	820 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	830 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

// 9		*********
//Check if finished
IF THIS^.State =	910 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	920 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	930 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

// 10	*********
//Check if finished
IF THIS^.State =	1010 THEN
	CheckIfFinished();
END_IF

//Start transition
IF THIS^.State =	1020 THEN
	StartTransition_1();
END_IF

//Wait for transition end
IF THIS^.State =	1030 THEN
	WaitForTransitionEnd_1_AndRestore();
END_IF

//Finished
IF THIS^.State = 1110 THEN
	RunWithManualRestore := TRUE;
END_IF

_TcoTask_Transition_1(Value:=Value);
]]></ST>
      </Implementation>
    </Method>
    <Action Name="StartTransition_1" Id="{909ae9db-e32d-4dae-adb4-745ff4882ea6}">
      <Implementation>
        <ST><![CDATA[	CASE THIS^._WaveformPointTable[_ActualTransitionNumber].TransitionType OF
		eTransitionType.Linear:
			THIS^._TcoTask_Transition_1.StartLinear(THIS^._WaveformPointTable[_ActualTransitionNumber].TargetValue,
													THIS^._WaveformPointTable[_ActualTransitionNumber].Duration);
			THIS^.ChangeState(THIS^.State + 10);	
		eTransitionType.Exponential:
			THIS^._TcoTask_Transition_1.StartExponential(THIS^._WaveformPointTable[_ActualTransitionNumber].TargetValue,
														 THIS^._WaveformPointTable[_ActualTransitionNumber].Duration,
														 THIS^._WaveformPointTable[_ActualTransitionNumber].Shape);
			THIS^.ChangeState(THIS^.State + 10);	
		eTransitionType.S_Type:
			THIS^._TcoTask_Transition_1.StartStype(THIS^._WaveformPointTable[_ActualTransitionNumber].TargetValue,
												   THIS^._WaveformPointTable[_ActualTransitionNumber].Duration,
												   THIS^._WaveformPointTable[_ActualTransitionNumber].Shape);
			THIS^.ChangeState(THIS^.State + 10);	
		ELSE
			THIS^.ChangeState(1110);
	END_CASE	
]]></ST>
      </Implementation>
    </Action>
    <Action Name="StartTransition_2" Id="{41d6e912-e0af-4fde-91ca-6071d552c63d}">
      <Implementation>
        <ST><![CDATA[	CASE THIS^._WaveformPointTable[_ActualTransitionNumber].TransitionType OF
		eTransitionType.Linear:
			THIS^._TcoTask_Transition_2.StartLinear(THIS^._WaveformPointTable[_ActualTransitionNumber].TargetValue,
													THIS^._WaveformPointTable[_ActualTransitionNumber].Duration);
			THIS^.ChangeState(THIS^.State + 10);	
		eTransitionType.Exponential:
			THIS^._TcoTask_Transition_2.StartExponential(THIS^._WaveformPointTable[_ActualTransitionNumber].TargetValue,
														 THIS^._WaveformPointTable[_ActualTransitionNumber].Duration,
														 THIS^._WaveformPointTable[_ActualTransitionNumber].Shape);
			THIS^.ChangeState(THIS^.State + 10);	
		eTransitionType.S_Type:
			THIS^._TcoTask_Transition_2.StartStype(THIS^._WaveformPointTable[_ActualTransitionNumber].TargetValue,
												   THIS^._WaveformPointTable[_ActualTransitionNumber].Duration,
												   THIS^._WaveformPointTable[_ActualTransitionNumber].Shape);
			THIS^.ChangeState(THIS^.State + 10);	
		ELSE
			THIS^.ChangeState(1110);
	END_CASE	]]></ST>
      </Implementation>
    </Action>
    <Action Name="WaitForTransitionEnd_1" Id="{60159057-58ba-4d8e-8c74-e3de02e5b7a2}">
      <Implementation>
        <ST><![CDATA[	IF THIS^._TcoTask_Transition_1.Done THEN
		_ActualTransitionNumber := _ActualTransitionNumber + 1;
		THIS^.ChangeState(THIS^.State + 80);
	END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="WaitForTransitionEnd_1_AndRestore" Id="{6b6f8c5c-1e16-42c9-97a8-c88dd98bb727}">
      <Implementation>
        <ST><![CDATA[	IF THIS^._TcoTask_Transition_1.Done THEN
		_ActualTransitionNumber := _ActualTransitionNumber + 1;
		THIS^.ChangeState(THIS^.State + 80).RestoreObject(_TcoTask_Transition_1);	
	END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="WaitForTransitionEnd_2" Id="{89f70e53-8d7f-43a8-99d6-f14126c9194a}">
      <Implementation>
        <ST><![CDATA[	IF THIS^._TcoTask_Transition_2.Done THEN
		_ActualTransitionNumber := _ActualTransitionNumber + 1;
		THIS^.ChangeState(THIS^.State + 80);
	END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="WaitForTransitionEnd_2_AndRestore" Id="{ed4aa7e4-5b5e-4758-9395-8225b47f4ca5}">
      <Implementation>
        <ST><![CDATA[	IF THIS^._TcoTask_Transition_2.Done THEN
		_ActualTransitionNumber := _ActualTransitionNumber + 1;
		THIS^.ChangeState(THIS^.State + 80).RestoreObject(_TcoTask_Transition_2);	
	END_IF]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="TcoState_WaveformSequence">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.AddWaveFormPoint">
      <LineId Id="39" Count="4" />
      <LineId Id="26" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.CheckIfFinished">
      <LineId Id="2" Count="3" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.ClearWaveFormTable">
      <LineId Id="12" Count="0" />
      <LineId Id="23" Count="2" />
      <LineId Id="21" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="26" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.RunWithAutoRestore">
      <LineId Id="1432" Count="7" />
      <LineId Id="1633" Count="1" />
      <LineId Id="1440" Count="0" />
      <LineId Id="1442" Count="180" />
      <LineId Id="1630" Count="2" />
      <LineId Id="1629" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.RunWithManualRestore">
      <LineId Id="1014" Count="6" />
      <LineId Id="1209" Count="0" />
      <LineId Id="1021" Count="181" />
      <LineId Id="1210" Count="0" />
      <LineId Id="1208" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.StartTransition_1">
      <LineId Id="2" Count="16" />
      <LineId Id="1" Count="0" />
      <LineId Id="20" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.StartTransition_2">
      <LineId Id="2" Count="16" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.WaitForTransitionEnd_1">
      <LineId Id="27" Count="0" />
      <LineId Id="25" Count="1" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.WaitForTransitionEnd_1_AndRestore">
      <LineId Id="24" Count="2" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.WaitForTransitionEnd_2">
      <LineId Id="24" Count="2" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="TcoState_WaveformSequence.WaitForTransitionEnd_2_AndRestore">
      <LineId Id="24" Count="2" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>