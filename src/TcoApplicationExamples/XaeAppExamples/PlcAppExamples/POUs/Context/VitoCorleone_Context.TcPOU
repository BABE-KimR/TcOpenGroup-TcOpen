<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="VitoCorleone_Context" Id="{6d11b071-a8fb-0da4-121f-f03cc1d5b01d}" SpecialFunc="None">
    <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Root construction container, provides context information for <c>TcoObjects</c> declared within its scope.
			This function block is ```abstract``` and cannot be instantiated. 
			Use <see cref="TcoContext.PlcTcoContext.Run()"/> to run this context, ```Run``` method must be called only once per Plc's Task cycle.
			Several 'TcoContext' instances can be declared and called inside one TwinCAT PlcTask, but only once per plc cycle. The instance should not be accessed from several Twincat PlcTasks.
			Default implemenation of the 'TcoContext' allows its child members access properties <see cref="TcoContext.PlcTcoContext.StartCycleCount()"/> and <see cref="TcoContext.PlcTcoContext.EndCycleCount()"/>.\			 			 			
			<note type="tip">
				 A <c>TcoContext</c> can contain objects, components and PLC logic of one independent station of the machine, while the another one can cover the same for another station.			
			</note>
			<remarks>			
				<note type="tip">
					TwinCAT PlcTask and <see cref="TcoTask.PlcTcoTask()"/> refer to two different concepts. 
				</note>
			</remarks>			
		</summary>			
	</docu>	
~*)
{attribute clr [ForceIntoApiDocumentation()]}
FUNCTION_BLOCK VitoCorleone_Context EXTENDS TcoCore.TcoContext
VAR
	_santino : Santino_Object(THIS^);
	_thomas : Thomas_Object(THIS^);
	_frederico : Frederico_Object(THIS^);
	_michael : Michael_Object(THIS^);
	_costanzia : Constanzia_Object(THIS^);
END_VAR

VAR
	_donCorleoneContext : ITcoContext;
	_isSameContext : BOOL;
	
	_donCorleoneIdentity : ULINT;
	_isDifferentIndentity : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Main" Id="{3ca00f52-1d93-04da-0805-13b49953b96a}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Main method of the TcoContext. This is the entry point of any control logic that belongs to this context. 
			The call of this method is ensured by calling the <c>InstanceName.Run()</c> method, and it must not be called explicitly.
			This method is abstract, and it must be overridden in derived block.
		</summary>
	</docu>
~*)
METHOD PROTECTED  Main
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// In Corleone family they all share the same context that is that of Don Vito Corleone

// Here is the tree of family Corleone

// https://godfather.fandom.com/wiki/Corleone_family


_donCorleoneContext := THIS^.Context;
_isSameContext := _donCorleoneContext = THIS^._santino.Context
					// Santino's kids
					AND (THIS^._santino.Context = THIS^._santino._francesca.Context AND THIS^._santino.Context = THIS^._santino._frank.Context AND THIS^._santino.Context = THIS^._santino._kathryn.Context AND THIS^._santino.Context = THIS^._santino._santino.Context)
				  	AND THIS^._santino.Context = THIS^._thomas.Context
					// Thomas' kids
					AND (THIS^._thomas.Context = THIS^._thomas._andrew.Context AND THIS^._thomas.Context = THIS^._thomas._christina.Context AND THIS^._thomas.Context = THIS^._thomas._frank.Context AND THIS^._thomas.Context = THIS^._thomas._gianna.Context)
					AND THIS^._thomas.Context = THIS^._frederico.Context
					// Frederico's son
					AND (THIS^._frederico.Context = THIS^._frederico._fredo.Context) 
					AND THIS^._frederico.Context = THIS^._michael.Context
					// Michael's kids
					AND (THIS^._michael.Context = THIS^._michael._anthony.Context AND THIS^._michael.Context = THIS^._michael._mary.Context)					
					AND THIS^._michael.Context = THIS^._costanzia.Context
					// Constanzia's kids
					AND (THIS^._costanzia.Context = THIS^._costanzia._michael.Context AND THIS^._costanzia.Context = THIS^._costanzia._victor.Context);
					
					

// However each member of the family has different personal identity and that might be source of trouble

_donCorleoneIdentity := THIS^.Identity;
_isDifferentIndentity := _donCorleoneIdentity <> THIS^._santino.Identity 					
						AND (THIS^._santino.Identity <> THIS^._santino._francesca.Identity AND THIS^._santino.Identity <> THIS^._santino._frank.Identity AND THIS^._santino.Identity <> THIS^._santino._kathryn.Identity AND THIS^._santino.Identity <> THIS^._santino._santino.Identity)
				  		AND THIS^._santino.Identity <> THIS^._thomas.Identity
						AND (THIS^._thomas.Identity <> THIS^._thomas._andrew.Identity AND THIS^._thomas.Identity <> THIS^._thomas._christina.Identity AND THIS^._thomas.Identity <> THIS^._thomas._frank.Identity AND THIS^._thomas.Identity <> THIS^._thomas._gianna.Identity)
						AND THIS^._thomas.Identity <> THIS^._frederico.Identity
						AND (THIS^._frederico.Identity <> THIS^._frederico._fredo.Identity) 
						AND THIS^._frederico.Identity <> THIS^._michael.Identity
						AND (THIS^._michael.Identity <> THIS^._michael._anthony.Identity AND THIS^._michael.Identity <> THIS^._michael._mary.Identity)
						AND THIS^._michael.Identity <> THIS^._costanzia.Identity
						AND (THIS^._costanzia.Identity <> THIS^._costanzia._michael.Identity AND THIS^._costanzia.Identity <> THIS^._costanzia._victor.Identity);
 

// Once the context is asigned it cannot be changed, an attempt to change the context will result in omerta.

						]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>