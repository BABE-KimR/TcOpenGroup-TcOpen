<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="TcoObject_Counter" Id="{1d690502-343b-4861-91f4-5ad9fa723fe3}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TcoObject_Counter EXTENDS TcoObject
VAR
	CounterValue : LINT;
	UpperLimit : LINT;
	LowerLimit : LINT;
	TcoTask_CountUp : TcoTask(THIS^);
	TcoTask_CountDown : TcoTask(THIS^);
	TcoTask_ResetToZero : TcoTask(THIS^);
	CountUp_InvokeTrigCounter : LINT;
	CountUp_DoneTrigCounter : LINT;
	CountDown_InvokeTrigCounter : LINT;
	CountDown_DoneTrigCounter : LINT;
	ResetToZero_InvokeTrigCounter : LINT;
	ResetToZero_DoneTrigCounter : LINT;
	CountUp_PreviousState : eTaskState;
	CountDown_PreviousState : eTaskState;
	ResetToZero_PreviousState : eTaskState;
	CountUp_Execute : BOOL;
	CountDown_Execute : BOOL;
	ResetToZero_Execute : BOOL;
	CountUp_Busy : BOOL;
	CountDown_Busy : BOOL;
	ResetToZero_Busy : BOOL;
	CountUp_Done : BOOL;
	CountDown_Done : BOOL;
	ResetToZero_Done : BOOL;
	Cycle	:LINT ;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CountUp_Execute 	:= FALSE;
CountDown_Execute 	:= FALSE;
ResetToZero_Execute := FALSE;
CountUp_Busy 		:= FALSE;
CountDown_Busy 		:= FALSE;
ResetToZero_Busy 	:= FALSE;
CountUp_Done 		:= FALSE;
CountDown_Done 		:= FALSE;
ResetToZero_Done 	:= FALSE;
	
//******************************************************************
IF(TcoTask_CountUp._taskState = eTaskState.Request AND CountUp_PreviousState<> eTaskState.Request ) THEN
	CountUp_InvokeTrigCounter := CountUp_InvokeTrigCounter + 1;
END_IF

IF(TcoTask_CountUp.Execute()) THEN
	CountUp_Busy 		:= TRUE;
	CounterValue := CounterValue + 1;
	TcoTask_CountUp.DoneWhen(CounterValue >= UpperLimit);			
END_IF

IF(TcoTask_CountUp._taskState = eTaskState.Done AND CountUp_PreviousState <> eTaskState.Done ) THEN
	CountUp_DoneTrigCounter := CountUp_DoneTrigCounter + 1;
END_IF
CountUp_Done 		:= TcoTask_CountUp._taskState = eTaskState.Done;
CountUp_PreviousState := TcoTask_CountUp._taskState ;
//******************************************************************

//******************************************************************
IF(TcoTask_CountDown._taskState = eTaskState.Request AND CountDown_PreviousState <> eTaskState.Request) THEN
	CountDown_InvokeTrigCounter := CountDown_InvokeTrigCounter + 1;
END_IF

IF(TcoTask_CountDown.Execute()) THEN
	CountDown_Busy 		:= TRUE;
	CounterValue := CounterValue - 1;
	TcoTask_CountDown.DoneWhen(CounterValue <= LowerLimit);			
END_IF

IF(TcoTask_CountDown._taskState = eTaskState.Done AND CountDown_PreviousState <> eTaskState.Done) THEN
	CountDown_DoneTrigCounter := CountDown_DoneTrigCounter + 1;
	Cycle	:= Cycle +1 ;
END_IF
CountDown_Done 		:= TcoTask_CountDown._taskState = eTaskState.Done;
CountDown_PreviousState := TcoTask_CountDown._taskState ;
//******************************************************************

//******************************************************************
IF (TcoTask_ResetToZero._taskState = eTaskState.Request AND ResetToZero_PreviousState <> eTaskState.Request) THEN
	ResetToZero_InvokeTrigCounter := ResetToZero_InvokeTrigCounter + 1;
END_IF

IF(TcoTask_ResetToZero.Execute()) THEN	
	ResetToZero_Busy 	:= TRUE;
	TcoTask_ResetToZero.DoneWhen(TRUE);	
END_IF

IF (TcoTask_ResetToZero._taskState = eTaskState.Done AND ResetToZero_PreviousState <> eTaskState.Done) THEN
	ResetToZero_DoneTrigCounter := ResetToZero_DoneTrigCounter + 1;
END_IF
ResetToZero_Done 	:= TcoTask_ResetToZero._taskState = eTaskState.Done;
ResetToZero_PreviousState := TcoTask_ResetToZero._taskState;
//******************************************************************
]]></ST>
    </Implementation>
    <Method Name="Restore" Id="{a523e8d0-8c27-4b93-a0b8-da56398bcb55}">
      <Declaration><![CDATA[METHOD Restore : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcoTask_CountUp.Reset();
TcoTask_CountDown.Reset();
CounterValue := 0;

ResetToZero_Execute := TRUE;

THIS^.TcoTask_ResetToZero.Invoke();]]></ST>
      </Implementation>
    </Method>
    <Method Name="StartCountDown" Id="{f6670323-40fb-4af5-bef7-04bb669c19a2}">
      <Declaration><![CDATA[METHOD StartCountDown
VAR_INPUT
	Value : LINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.LowerLimit := Value;

CountDown_Execute 	:= TRUE;

TcoTask_CountDown.Invoke();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="StartCountUp" Id="{363a05fb-eb83-4160-9012-8652b2152468}">
      <Declaration><![CDATA[METHOD StartCountUp
VAR_INPUT
	Value : LINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.UpperLimit := Value;

CountUp_Execute 	:= TRUE;

TcoTask_CountUp.Invoke();
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="TcoObject_Counter">
      <LineId Id="242" Count="2" />
      <LineId Id="257" Count="5" />
      <LineId Id="241" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="171" Count="2" />
      <LineId Id="105" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="21" Count="1" />
      <LineId Id="110" Count="0" />
      <LineId Id="165" Count="2" />
      <LineId Id="275" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="187" Count="2" />
      <LineId Id="48" Count="1" />
      <LineId Id="264" Count="0" />
      <LineId Id="50" Count="1" />
      <LineId Id="47" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="182" Count="1" />
      <LineId Id="274" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="123" Count="2" />
      <LineId Id="194" Count="2" />
      <LineId Id="129" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="130" Count="0" />
      <LineId Id="200" Count="1" />
      <LineId Id="199" Count="0" />
      <LineId Id="277" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="TcoObject_Counter.Restore">
      <LineId Id="6" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="TcoObject_Counter.StartCountDown">
      <LineId Id="7" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="16" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="TcoObject_Counter.StartCountUp">
      <LineId Id="7" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>