{
  "AliasBlocks": [],
  "EnumBlocks": [
    {
      "Name": "eMessageCategory",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'eMessageCategory']\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tEnumerator of message categories.\n\t\t</summary>\n\t</docu>\t\n~*)\n\n// ATTENTION: Values must be multiply of 100\n{attribute 'qualified_only'}\n{attribute 'strict'}\nTYPE eMessageCategory :\n(\t\n\tNone := 0,\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tDebug message to be used for debugging purpose only.\n\t\t</summary>\n\t</docu>\t\n\t~*)\t\n\tDebug := 100,\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tTrace message to be used for tracing purpose.\n\t\t</summary>\n\t</docu>\t\n\t~*)\t\n\tTrace := 200,\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tInfo message\n\t\t</summary>\n\t</docu>\t\n\t~*)\t\n\tInfo := 300,\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tTime-out message.\n\t\t</summary>\n\t</docu>\t\n\t~*)\n\tTimedOut := 400,\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tNotification message.\n\t\t</summary>\n\t</docu>\t\n\t~*)\n\tNotification := 500,\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tWarning message.\n\t\t</summary>\n\t</docu>\t\n\t~*)\n\tWarning := 600,\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tError message.\n\t\t</summary>\n\t</docu>\t\n\t~*)\n\tError := 700,\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tTo be used when wrong setting have been provided by the user.\n\t\t</summary>\n\t</docu>\t\n\t~*)\n\tWrongSettings := 800,\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tProgramming issue. \n\t\t</summary>\n\t</docu>\t\n\t~*)\n\tProgrammingError := 900,\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tCritical error. \n\t\t</summary>\n\t</docu>\t\n\t~*)\t\n\tCritical := 1000,\t\t\n\t(*~\n\t<docu>\n\t\t<summary>\n\t\t\tCatastrophic error. \n\t\t</summary>\n\t</docu>\t\n\t~*)\n\tCatastrophic := 1100\n);\nEND_TYPE\n",
      "MirrorFiles": null
    },
    {
      "Name": "eSequencerMode",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'eSequencerMode']\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tModes of the sequencer.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n{attribute 'qualified_only'}\n{attribute 'strict'}\nTYPE eSequencerMode :\n(\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tIf invalid, no logic is executed.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tInvalid := -10,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tIf cyclic mode is selected, next step is automatically started after the previous has been finished.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tCyclicMode := 0,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tIf step mode is selected, when current step has been finished next step has to be started by calling method StepIn().\n\t\t\t<para>\n\t\t\t\tSee <see cref=\"TcoSequencer.StepIn\"/> for detailed description.\n\t\t\t</para>\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tStepMode := 10\n);\nEND_TYPE\n",
      "MirrorFiles": null
    },
    {
      "Name": "eStepStatus",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'eStepStatus']\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tDescribes the step status inside the sequencer.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\n{attribute 'qualified_only'}\n{attribute 'strict'}\nTYPE eStepStatus :\n(\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tNo status defined.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tNone := 0,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tStep is disabled and it is not going to be executed.\n\t\t\tNext enabled step in the sequence will be executed, when sequencer reach that step.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tDisabled := 10,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tStep is ready to run. This case occurs when sequence is in step mode, step is in order of the execution and step is enabled.\n\t\t\tCode body of the current step is not executing. After calling StepIn method, step becames running and its code body starts to be executing.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tReadyToRun := 20,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tStep is currently running and his code body is currently executing.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tRunning := 30,\t\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tStep has been finished. Its code body is not executing.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tDone := 40,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tStep is in error state. Its code body is not executing.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tError := 50\n);\nEND_TYPE\n",
      "MirrorFiles": null
    },
    {
      "Name": "eSequencerError",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'eSequencerError']\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tDescribes cause of the sequencer error.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\n{attribute 'qualified_only'}\n{attribute 'strict'}\nTYPE eSequencerError :\n(\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tNo error.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tnoError := 0,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tSome of the StepId in the sequence is not unique.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\tNotUniqueStepId := 10,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tStepId of the actually executed step has been changed during its execution.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\n\tStepIdHasBeenChanged := 20,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tOrder of the actually executed step has been changed during its execution.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\n\tOrderOfTheStepHasBeenChanged := 40,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tMethod RequestStep has been called with nonexisting StepId in the sequence.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\n\tStepWithRequestedIdDoesNotExists := 50,\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tMethod RequestStep has been called while previous RequestStep call has not yet been completed.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\n\tSeveralRequestStep := 60\n);\nEND_TYPE\n ",
      "MirrorFiles": null
    },
    {
      "Name": "eTaskState",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'eTaskState']\n{attribute 'qualified_only'}\n{attribute 'strict'}\nTYPE eTaskState :\n(\n\tIdle := 0,\n\tRequest := 10,\n\tExecuting := 20,\n\tError := 30,\n\tDone := 40\n);\nEND_TYPE\n",
      "MirrorFiles": null
    }
  ],
  "FunctionBlocks": [
    {
      "ImplementationText": "",
      "Methods": [],
      "Properties": [],
      "Name": "TcoComponent",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'TcoComponent']\nFUNCTION_BLOCK ABSTRACT TcoComponent EXTENDS TcoObject IMPLEMENTS ITcoRestorable\n",
      "MirrorFiles": null
    },
    {
      "ImplementationText": "",
      "Methods": [],
      "Properties": [],
      "Name": "TcoMessenger",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'TcoMessenger']\n(*~\n\t\t<docu>\n\t\t\t<summary>\n\t\t\t\tProvides mechanism for delivering messages to the HMI.\t\t\t\t \n\t\t\t</summary>\t\t\t\n\t\t</docu>\n~*)\nFUNCTION_BLOCK PUBLIC TcoMessenger IMPLEMENTS ITcoMessenger\nVAR\t\t\t\n\t(*~\n\t\t<docu>\n\t\t\t<summary>\n\t\t\t\tMost important message of this instance of messenger.\t\t\t \n\t\t\t</summary>\t\t\t\n\t\t</docu>\n\t~*)\n\t_mime : TcoMessage;\n\t_Parent : ITcoObject;\n\t_contextIdentity : ULINT;\t\t\t\t\nEND_VAR",
      "MirrorFiles": null
    },
    {
      "ImplementationText": "",
      "Methods": [],
      "Properties": [],
      "Name": "TcoContext",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'TcoContext']\nFUNCTION_BLOCK PUBLIC ABSTRACT TcoContext IMPLEMENTS ITcoContext\nVAR\n\t{attribute clr [RenderIgnore()]}\n\t{attribute clr [ReadOnly()]}\n\t_Identity : ULINT;\n\t{attribute 'hide'}\n\t_startCycleCount : ULINT;\n\t{attribute 'hide'}\n\t_endCycleCount : ULINT;\n\t{attribute 'hide'}\n\t_Messenger : TcoMessenger(THIS^); \nEND_VAR\n\n",
      "MirrorFiles": null
    },
    {
      "ImplementationText": "",
      "Methods": [],
      "Properties": [],
      "Name": "TcoObject",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'TcoObject']\nFUNCTION_BLOCK ABSTRACT TcoObject IMPLEMENTS ITcoObject\nVAR\n\t{attribute clr [RenderIgnore()]}\n\t{attribute clr [ReadOnly()]}\n\t_Identity : ULINT;\n\t{attribute 'hide'}\n\t_Parent : ITcoObject;\nEND_VAR\n",
      "MirrorFiles": null
    },
    {
      "ImplementationText": "",
      "Methods": [],
      "Properties": [],
      "Name": "TcoStepModeControler",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'TcoStepModeControler']\n(*~\n\t\t<docu>\n\t\t\t<summary>\n\t\t\t\tProvides switching between sequencer modes so as handling stepping tasks in th step mode.\n\t\t\t</summary>\n\t\t</docu>\n~*)\nFUNCTION_BLOCK TcoStepModeControler EXTENDS TcoState\nVAR_INPUT\n\tinCurrentStepRunning : BOOL;\nEND_VAR\nVAR\n\t{attribute 'hide'}\n\t_stepBackward : TcoTask(THIS^);\n\t{attribute 'hide'}\n\t_stepIn : TcoTask(THIS^);\n\t{attribute 'hide'}\n\t_stepForward : TcoTask(THIS^);\nEND_VAR",
      "MirrorFiles": null
    },
    {
      "ImplementationText": "",
      "Methods": [],
      "Properties": [],
      "Name": "TcoSequencer",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'TcoSequencer']\n(*~\n\t\t<docu>\n\t\t\t<summary>\n\t\t\t\tProvides basic sequential control, including step mode, which allows to run the sequence step-by step, step forward and step backward.\n\t\t\t</summary>\n\t\t</docu>\n~*)\nFUNCTION_BLOCK ABSTRACT TcoSequencer EXTENDS TcoState IMPLEMENTS ITcoSequencer\nVAR\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tHolds the status and internal variables of the current step.\n\t\t</summary>\t\t\t\n\t\t<remarks>\t\t\t\n\t\t\t<para>\n\t\t\t\tSee <see cref=\"StepDetails\"/> for detailed description.\n\t\t\t</para>\n\t\t</remarks>\t\t\n\t</docu>\t\n~*)\n\t{attribute addProperty Name \"<#Current step#>\"}\n\t_currentStep : StepDetails;\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tTrue if an error occurs in the sequence. Detailed cause of this error is described by the _sequencerErrorId.\t\t\n\t\t</summary>\t\t\t\t\n\t\t<remarks>\t\t\t\n\t\t\t<para>\n\t\t\t\tSee <see cref=\"TcoSequencer._sequencerErrorId\"/> for detailed description.\n\t\t\t</para>\n\t\t</remarks>\t\n\t</docu>\t\n~*)\t\n\t{attribute addProperty Name \"<#Sequencer error#>\"}\n\t{attribute clr [ReadOnly()]}\n\t_sequencerHasError : BOOL;\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tDescribes cause of the sequencer error.\n\t\t</summary>\t\t\n\t\t<remarks>\t\t\t\n\t\t\t<para>\n\t\t\t\tSee <see cref=\"eSequencerError\"/> for detailed description.\n\t\t\t</para>\n\t\t</remarks>\t\t\t\n\t</docu>\t\n~*)\t\n\t{attribute addProperty Name \"<#Sequencer error ID#>\"}\n\t{attribute clr [ReadOnly()]}\n\t_sequencerErrorId : eSequencerError := eSequencerError.noError;\n\t{attribute 'hide'}\n\t_isFirstStepEntry : BOOL;\n\t{attribute 'hide'}\n\t_theOrderOfTheCurrentlyEvaluatedStep : UINT;\t\n\t{attribute 'hide'}\n\t_theOrderOfTheCurrentlyExecutedStep : UINT;\t\n\t{attribute 'hide'}\n\t_theOrderOfThePreviouslyExecutedStep : UINT;\n\t {attribute 'hide'}\n\t_IdOfThePreviouslyExecutedStep : INT;\n\t{attribute 'hide'}\n\t_numberOfStepsInSequence : UINT;\n\t{attribute 'hide'}\n\t_previousNumberOfStepsInSequence : UINT;\n\t{attribute 'hide'}\n\t_stepCounter : UINT;\t\n\t{attribute 'hide'}\n\t_requestStepActive : BOOL;\t\n\t{attribute 'hide'}\n\t_requestedStepId : INT;\t\n\t{attribute 'hide'}\n\t_cycleTimer : TON;   \n\t{attribute 'hide'}\n\t_StepTimer : TON;\n\t_SequenceElapsedTime : TIME;\n\t_StepElapsedTime : TIME;\n\t_LastCycleTime: TIME;\n\t{attribute 'hide'}\n\t_requestStepCycle: UINT;\nEND_VAR\n\nVAR\n\t{attribute 'hide'}\n\t_StepIdChanged : BOOL;\n\t{attribute 'hide'}\n\t_StepOrderChanged : BOOL;\n\t{attribute 'hide'}\n\t_ChangeStepIdFrom : INT;\n\t{attribute 'hide'}\n\t_ChangeStepIdTo : INT;\n\t{attribute 'hide'}\n\t_ChangeStepOrderFrom : UINT;\n\t{attribute 'hide'}\n\t_ChangeStepOrderTo : UINT;\n\t{attribute 'hide'}\n\t_stepIdUniquenessChecked : BOOL := FALSE;\nEND_VAR\n\nVAR\n\t{attribute 'hide'}\n    _pPreviusSteps : POINTER TO INT;\nEND_VAR\n\nVAR\n\t{attribute 'hide'}\n\t_stepModeControler : TcoStepModeControler(THIS^,FALSE);\n\t{attribute 'hide'}\n\t_checkStepIdRequestedInStepMode : BOOL;\nEND_VAR",
      "MirrorFiles": null
    },
    {
      "ImplementationText": "",
      "Methods": [],
      "Properties": [],
      "Name": "TcoState",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'TcoState']\nFUNCTION_BLOCK TcoState EXTENDS TcoObject IMPLEMENTS ITcoState\nVAR\n\t(*<docu><summary>\n\tVariable holds curren state identifier.\n    </summary></docu>*)\n\t_State : INT; \t\n\t{attribute clr [RenderIgnore()]}\n\t{attribute clr [ReadOnly()]}\n\t_enableAutoRestore : BOOL;\n\t_messenger : TcoMessenger(THIS^);\n\t{attribute 'hide'}\n\t_AutoRestorable : BOOL;\n\t{attribute 'hide'}\n\t_StartCycleCount\t: ULINT;\n\t{attribute 'hide'}\n\t_MyParentsChangeStateCycle\t: ULINT;\n\t{attribute 'hide'}\n\t_ChangeStateCycle\t: ULINT;\n\t{attribute 'hide'}\n\t_LastChangeState\t: INT;\n\t{attribute 'hide'}\n\t_MyParentsLastChangeState\t: INT;\t\nEND_VAR\n",
      "MirrorFiles": null
    },
    {
      "ImplementationText": "",
      "Methods": [],
      "Properties": [],
      "Name": "TcoTask",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'TcoTask']\n{attribute 'initialize_on_call'}\nFUNCTION_BLOCK TcoTask EXTENDS TcoObject IMPLEMENTS ITcoTask\nVAR\n\t_taskState : eTaskState;\n\t{attribute clr [RenderIgnore()]}\n\t{attribute clr [ReadOnly()]}\n\t_nextExpectedCycle : ULINT;\n\t_messenger : TcoMessenger(THIS^);\n\t{attribute 'hide'}\n\t_AutoRestorable : BOOL;\n\t{attribute 'hide'}\n\t_StartCycleCount\t: ULINT;\n\t{attribute 'hide'}\n\t_MyParentsChangeStateCycle\t: ULINT;\n\t{attribute 'hide'}\n\t_MyParentsLastChangeState\t: INT;\t\nEND_VAR",
      "MirrorFiles": null
    }
  ],
  "GlobalVariableTables": [],
  "Name": "TcoCore",
  "Namespace": "TcoCore",
  "ProgramBlocks": [
    {
      "ImplementationText": "",
      "Methods": [],
      "Properties": [],
      "Name": "MAIN",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'MAIN']\nPROGRAM MAIN\n",
      "MirrorFiles": null
    }
  ],
  "StructBlocks": [
    {
      "Name": "TcoMessage",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'TcoMessage'] [STRUCT]\nTYPE TcoMessage :\nSTRUCT\n\t{attribute clr [ReadOnly()]}\n\tTimeStamp : DT;\n\t{attribute clr [ReadOnly()]}\t\t\n\tText : STRING(255);\n\t{attribute clr [ReadOnly()]}\t\n\tIdentity : ULINT;\t\n\tCategory : eMessageCategory;\n\t{attribute clr [ReadOnly()]}\n\tCycle : ULINT;\nEND_STRUCT\nEND_TYPE\n",
      "MirrorFiles": null
    },
    {
      "Name": "StepDetails",
      "DeclarationText": "[NS : 'TcoCore' NAME : 'StepDetails'] [STRUCT]\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tDescribes the status and internal variables of the step of the sequencer.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\nTYPE StepDetails :\nSTRUCT\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tStep identification number.\n\t\t</summary>\t\n\t\t<remarks>\t\t\t\n \t\t\t<note type=\"important\">\n\t\t\t\tThis number must be unique throughout the complete sequence as it is used as identificator in case of jumping to the required step.\n\t\t\t</note>\n\t\t\t<para>\n\t\t\t\tThe <see cref=\"TcoSequencer.RequestStep\"/> method is using this number to jump to the required step.\n\t\t\t</para>\n\t\t</remarks>\n\t</docu>\t\n~*)\n\t{attribute addProperty Name \"<#Step ID#>\"}\n\tID: INT;\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tOrder of the step in the sequence.\n\t\t</summary>\t\n\t</docu>\t\n~*)\n\t{attribute addProperty Name \"<#Step Order#>\"}\n\tOrder: UINT;\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tIf this value is false, step body is not executed and execution is moved to the next enabled step.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\n\t{attribute addProperty Name \"<#Enabled#>\"}\n\tEnabled: BOOL;\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tStep description text.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\n\t{attribute addProperty Name \"<#Step description#>\"}\n\tDescription: STRING(254);\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tDescribes step status.\n\t\t</summary>\t\t\t\t\n\t\t<remarks>\t\t\t\n\t\t\t<para>\n\t\t\t\tSee <see cref=\"eStepStatus\"/> for detailed description.\n\t\t\t</para>\n\t\t</remarks>\t\t\n\t\tenumStepStatus\n\t</docu>\t\n~*)\t\n\t{attribute addProperty Name \"<#Step status#>\"}\n\tStatus : eStepStatus;\n(*~\n\t<docu>\n\t\t<summary>\n\t\t\tStep duration time.\n\t\t</summary>\t\t\t\t\n\t</docu>\t\n~*)\t\n\t{attribute addProperty Name \"<#Step duration#>\"}\n\tDuration : TIME;\nEND_STRUCT\nEND_TYPE\n",
      "MirrorFiles": null
    }
  ],
  "UnionBlocks": []
}