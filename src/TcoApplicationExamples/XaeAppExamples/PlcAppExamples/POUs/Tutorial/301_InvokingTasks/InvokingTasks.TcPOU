<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="InvokingTasks" Id="{12cfae65-b95f-0775-1a26-802c03070a44}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK InvokingTasks EXTENDS TcoCore.TcoContext
VAR
	StartGround : TcoCore.TcoTask(THIS^);
	StartAutomat : TcoCore.TcoTask(THIS^);
	
	Automat : AutomatSequence(THIS^,eRestoreMode.AutoRestoreMembers);
	Ground : GroundSequence (THIS^,eRestoreMode.AutoRestoreMembers);

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Use main method]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{53bc0387-4233-0f84-3ca9-d2965b501168}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.FB_init(bInitRetains,bInCopyCode);
StartAutomat.Enabled := false;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Main" Id="{a6ba057b-ec5a-0051-11a4-7a811a9c8902}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Main method of the TcoContext. This is the entry point of any control logic that belongs to this context. 
			The call of this method is ensured by calling the <c>InstanceName.Run()</c> method, and it must not be called explicitly.
			This method is abstract, and it must be overridden in derived block.
		</summary>
	</docu>
~*)
METHOD PROTECTED  Main]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF StartGround.Execute() THEN
	StartAutomat.Restore();
	Ground.Run();
	Automat.Restore();	
	StartGround.DoneWhen(Ground.GroundDone);
	StartAutomat.Enabled := Ground.GroundDone;
END_IF

IF StartAutomat.Execute() THEN
	StartGround.Restore();
	Ground.Restore();
	Automat.Run();
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>